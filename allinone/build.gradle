plugins {
    id 'org.springframework.boot' version '2.2.2.RELEASE'
    id 'io.spring.dependency-management' version '1.0.8.RELEASE'
    id "com.gorylenko.gradle-git-properties" version "1.5.1"
    id 'java'
}

group = 'org.woehlke'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '12'

configurations {
    developmentOnly
    runtimeClasspath {
        extendsFrom developmentOnly
    }
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-data-jdbc'
    implementation 'org.springframework.boot:spring-boot-starter-jdbc'
    //implementation 'org.springframework.boot:spring-boot-starter-jta-bitronix'
    //implementation 'org.springframework.boot:spring-boot-starter-jta-atomikos'
    implementation 'org.springframework.boot:spring-boot-starter-cache'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-json'
    //implementation 'com.google.guava:guava:28.0-jre'
    runtimeOnly 'com.h2database:h2'
    implementation 'org.springframework.boot:spring-boot-configuration-metadata'
    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    testImplementation('org.springframework.boot:spring-boot-starter-test') {
        exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
    }
    testImplementation 'org.springframework.integration:spring-integration-test'
}

test {
    useJUnitPlatform()
}

springBoot {
    buildInfo()
}


